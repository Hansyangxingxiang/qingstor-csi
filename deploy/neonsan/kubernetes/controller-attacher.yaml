apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-neonsan-attacher
  namespace: kube-system
  labels:
    csi: "v0.4.0"
    owner: "yunify"

---
# Attacher must be able to work with PVs, nodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-attacher
  labels:
    csi: "v0.4.0"
    owner: "yunify"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-attacher
  labels:
    csi: "v0.4.0"
    owner: "yunify"
subjects:
  - kind: ServiceAccount
    name: csi-neonsan-attacher
    # replace with non-default namespace name
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-neonsan-attacher
  apiGroup: rbac.authorization.k8s.io

# Attacher must be able to work with config map in current namespace
#kind: Role
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  # replace with non-default namespace name
#  namespace: default
#  name: external-attacher-cfg
#rules:
#- apiGroups: [""]
#  resources: ["configmaps"]
#  verbs: ["get", "watch", "list", "delete", "update", "create"]
#
#---
#kind: RoleBinding
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: csi-attacher-role-cfg
#  # replace with non-default namespace name
#  namespace: default
#subjects:
#  - kind: ServiceAccount
#    name: csi-attacher
#    # replace with non-default namespace name
#    namespace: default
#roleRef:
#  kind: Role
#  name: external-attacher-cfg
#  apiGroup: rbac.authorization.k8s.io

---
kind: Service
apiVersion: v1
metadata:
  name: csi-neonsan-attacher
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "attacher"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  selector:
    app: "csi-neonsan"
    role: "attacher"
    csi: "v0.4.0"
    owner: "yunify"
  ports:
    - name: dummy
      port: 12345

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-neonsan-attacher
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "attacher"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "csi-neonsan"
      role: "attacher"
      csi: "v0.4.0"
      owner: "yunify"
  template:
    metadata:
      labels:
        app: "csi-neonsan"
        role: "attacher"
        csi: "v0.4.0"
        owner: "yunify"
    spec:
      serviceAccount: csi-neonsan-attacher
      containers:
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v0.4.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
#            If needed, we can enable leader election.
#            - "--leader-election"
#            - "--leader-election-namespace=$(MY_NAMESPACE)"
#            - "--leader-election-identity=$(MY_NAME)"
          env:
            - name: MY_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-neonsan
          image: dockerhub.qingcloud.com/csiplugin/csi-neonsan:latest
          args :
          - "--nodeid=$(NODE_ID)"
          - "--endpoint=$(CSI_ENDPOINT)"
          - "--v=5"
          - "--drivername=csi-neonsan"
          - "--config=/etc/neonsan/qbd.conf"
          - "--pools=kube"
          env:
          - name: NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CSI_ENDPOINT
            value: unix://var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
          - name: socket-dir
            mountPath: /var/lib/csi/sockets/pluginproxy/
          - name: server-config
            mountPath: /etc/neonsan
          - name: neonsan-cmd
            mountPath: /usr/bin
          - name: lib
            mountPath: /lib
          - name: usrlib
            mountPath: /usr/lib
        volumes:
        - name: socket-dir
          emptyDir:
        - name: server-config
          configMap:
            name: csi-neonsan
        - name: neonsan-cmd
          hostPath:
            path: /usr/bin
            type: DirectoryOrCreate
        - name: lib
          hostPath:
            path: /lib
        - name: usrlib
          hostPath:
            path: /usr/lib