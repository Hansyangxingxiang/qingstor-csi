apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-neonsan-snapshotter
  namespace: kube-system
  labels:
    csi: "v0.4.0"
    owner: "yunify"

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-snapshotter
  labels:
    csi: "v0.4.0"
    owner: "yunify"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["list", "watch", "create", "update", "delete", "get"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-snapshotter
  labels:
    csi: "v0.4.0"
    owner: "yunify"
subjects:
  - kind: ServiceAccount
    name: csi-neonsan-snapshotter
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-neonsan-snapshotter
  apiGroup: rbac.authorization.k8s.io

---
kind: Service
apiVersion: v1
metadata:
  name: csi-snapshotter
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "snapshotter"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  selector:
    app: "csi-neonsan"
    role: "snapshotter"
    csi: "v0.4.0"
    owner: "yunify"
  ports:
    - name: dummy
      port: 12345

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-neonsan-snapshotter
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "snapshotter"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  serviceName: "csi-neonsan-snapshotter"
  replicas: 1
  selector:
    matchLabels:
      app: "csi-neonsan"
      role: "snapshotter"
      csi: "v0.4.0"
      owner: "yunify"
  template:
    metadata:
      labels:
        app: "csi-neonsan"
        role: "snapshotter"
        csi: "v0.4.0"
        owner: "yunify"
    spec:
      serviceAccount: csi-neonsan-snapshotter
      imagePullSecrets:
      - name: csi-neonsan
      containers:
      - name: csi-snapshotter
        image: quay.io/k8scsi/csi-snapshotter:v0.4.0
        args:
        - "--csi-address=$(ADDRESS)"
        - "--connection-timeout=15s"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy
      - name: csi-neonsan
        image: dockerhub.qingcloud.com/csiplugin/csi-neonsan:latest
        args :
        - "--nodeid=$(NODE_ID)"
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--v=5"
        - "--drivername=csi-neonsan"
        - "--config=/etc/neonsan/qbd.conf"
        - "--pools=kube"
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix://var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy
        - name: server-config
          mountPath: /etc/neonsan
        - name: neonsan-cmd
          mountPath: /usr/bin
        - name: lib
          mountPath: /lib
        - name: usrlib
          mountPath: /usr/lib
      volumes:
      - name: socket-dir
        emptyDir:
      - name: server-config
        configMap:
          name: csi-neonsan
      - name: neonsan-cmd
        hostPath:
          path: /usr/bin
          type: DirectoryOrCreate
      - name: lib
        hostPath:
          path: /lib
      - name: usrlib
        hostPath:
          path: /usr/lib
