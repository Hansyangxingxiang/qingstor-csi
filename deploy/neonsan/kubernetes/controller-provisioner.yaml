# Copyright (C) 2018 Yunify, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this work except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file, or at:
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# In production, this needs to be in separate files, e.g. service account and
# role and role binding needs to be created once, while stateful set may
# require some tuning.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-neonsan-provisioner
  namespace: kube-system
  labels:
    csi: "v0.4.0"
    owner: "yunify"

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-provisioner
  labels:
    neonsan/csi-controller: "true"
    csi: "v0.4.0"
    owner: "yunify"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-neonsan-provisioner
  labels:
    csi: "v0.4.0"
    owner: "yunify"
subjects:
  - kind: ServiceAccount
    name: csi-neonsan-provisioner
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-neonsan-provisioner
  apiGroup: rbac.authorization.k8s.io

---
kind: Service
apiVersion: v1
metadata:
  name: csi-neonsan-provisioner
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "provisioner"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  selector:
    app: "csi-neonsan"
    role: "provisioner"
    csi: "v0.4.0"
    owner: "yunify"
  ports:
    - name: dummy
      port: 12345

---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-neonsan-provisioner
  namespace: kube-system
  labels:
    app: "csi-neonsan"
    role: "provisioner"
    csi: "v0.4.0"
    owner: "yunify"
spec:
  serviceName: "csi-neonsan-provisioner"
  selector:
    matchLabels:
      app: "csi-neonsan"
      role: "provisioner"
      csi: "v0.4.0"
      owner: "yunify"
  replicas: 1
  template:
    metadata:
      labels:
        app: "csi-neonsan"
        role: "provisioner"
        csi: "v0.4.0"
        owner: "yunify"
    spec:
      serviceAccount: csi-neonsan-provisioner
      imagePullSecrets:
      - name: csi-neonsan
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v0.4.0
          args:
            - "--provisioner=csi-neonsan"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-neonsan
          image: dockerhub.qingcloud.com/csiplugin/csi-neonsan:latest
          args:
          - "--nodeid=$(NODE_ID)"
          - "--endpoint=$(CSI_ENDPOINT)"
          - "--v=5"
          - "--drivername=csi-neonsan"
          - "--config=/etc/neonsan/qbd.conf"
          - "--pools=kube"
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
          - name: socket-dir
            mountPath: /var/lib/csi/sockets/pluginproxy
          - name: server-config
            mountPath: /etc/neonsan
          - name: neonsan-cmd
            mountPath: /usr/bin
          - name: lib
            mountPath: /lib
          - name: usrlib
            mountPath: /usr/lib
        volumes:
        - name: socket-dir
          emptyDir:
        - name: server-config
          configMap:
            name: csi-neonsan
        - name: neonsan-cmd
          hostPath:
            path: /usr/bin
            type: DirectoryOrCreate
        - name: lib
          hostPath:
            path: /lib
        - name: usrlib
          hostPath:
            path: /usr/lib